package dbEntities;
// Generated 23 Mar 2021, 23:39:24 by Hibernate Tools 6.0.0.Alpha2


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product"
    ,catalog="ECommerceApp"
)
public class Product  implements java.io.Serializable {


     private int id;
     private String productName;
     private String productDescription;
     private String photo;
     private int quantity;
     private long price;
     private String sellerName;
     private Integer sold;
     private Set<Category> categories = new HashSet<Category>(0);
     private Set<CartItems> cartItemses = new HashSet<CartItems>(0);

    public Product() {
    }

	
    public Product(int id, String productName, String productDescription, String photo, int quantity, long price, String sellerName) {
        this.id = id;
        this.productName = productName;
        this.productDescription = productDescription;
        this.photo = photo;
        this.quantity = quantity;
        this.price = price;
        this.sellerName = sellerName;
    }
    public Product(int id, String productName, String productDescription, String photo, int quantity, long price, String sellerName, Integer sold, Set<Category> categories, Set<CartItems> cartItemses) {
       this.id = id;
       this.productName = productName;
       this.productDescription = productDescription;
       this.photo = photo;
       this.quantity = quantity;
       this.price = price;
       this.sellerName = sellerName;
       this.sold = sold;
       this.categories = categories;
       this.cartItemses = cartItemses;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="productName", nullable=false, length=50)
    public String getProductName() {
        return this.productName;
    }
    
    public void setProductName(String productName) {
        this.productName = productName;
    }

    
    @Column(name="productDescription", nullable=false, length=200)
    public String getProductDescription() {
        return this.productDescription;
    }
    
    public void setProductDescription(String productDescription) {
        this.productDescription = productDescription;
    }

    
    @Column(name="photo", nullable=false, length=200)
    public String getPhoto() {
        return this.photo;
    }
    
    public void setPhoto(String photo) {
        this.photo = photo;
    }

    
    @Column(name="quantity", nullable=false)
    public int getQuantity() {
        return this.quantity;
    }
    
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    
    @Column(name="price", nullable=false, precision=10, scale=0)
    public long getPrice() {
        return this.price;
    }
    
    public void setPrice(long price) {
        this.price = price;
    }

    
    @Column(name="sellerName", nullable=false, length=50)
    public String getSellerName() {
        return this.sellerName;
    }
    
    public void setSellerName(String sellerName) {
        this.sellerName = sellerName;
    }

    
    @Column(name="sold")
    public Integer getSold() {
        return this.sold;
    }
    
    public void setSold(Integer sold) {
        this.sold = sold;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="product_categories", catalog="ECommerceApp", joinColumns = { 
        @JoinColumn(name="productId", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="categoryId", nullable=false, updatable=false) })
    public Set<Category> getCategories() {
        return this.categories;
    }
    
    public void setCategories(Set<Category> categories) {
        this.categories = categories;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<CartItems> getCartItemses() {
        return this.cartItemses;
    }
    
    public void setCartItemses(Set<CartItems> cartItemses) {
        this.cartItemses = cartItemses;
    }




}


