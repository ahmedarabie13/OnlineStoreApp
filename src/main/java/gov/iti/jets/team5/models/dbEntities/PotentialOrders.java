package dbEntities;
// Generated 23 Mar 2021, 23:39:24 by Hibernate Tools 6.0.0.Alpha2


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * PotentialOrders generated by hbm2java
 */
@Entity
@Table(name="potential_orders"
    ,catalog="ECommerceApp"
)
public class PotentialOrders  implements java.io.Serializable {


     private PotentialOrdersId id;
     private UserData userData;
     private Boolean active;
     private Set<CartItems> cartItemses = new HashSet<CartItems>(0);
     private Set<Orders> orderses = new HashSet<Orders>(0);

    public PotentialOrders() {
    }

	
    public PotentialOrders(PotentialOrdersId id, UserData userData) {
        this.id = id;
        this.userData = userData;
    }
    public PotentialOrders(PotentialOrdersId id, UserData userData, Boolean active, Set<CartItems> cartItemses, Set<Orders> orderses) {
       this.id = id;
       this.userData = userData;
       this.active = active;
       this.cartItemses = cartItemses;
       this.orderses = orderses;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="orderId", column=@Column(name="orderId", nullable=false) ), 
        @AttributeOverride(name="userId", column=@Column(name="userId", nullable=false) ) } )
    public PotentialOrdersId getId() {
        return this.id;
    }
    
    public void setId(PotentialOrdersId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="userId", nullable=false, insertable=false, updatable=false)
    public UserData getUserData() {
        return this.userData;
    }
    
    public void setUserData(UserData userData) {
        this.userData = userData;
    }

    
    @Column(name="active")
    public Boolean getActive() {
        return this.active;
    }
    
    public void setActive(Boolean active) {
        this.active = active;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="potentialOrders")
    public Set<CartItems> getCartItemses() {
        return this.cartItemses;
    }
    
    public void setCartItemses(Set<CartItems> cartItemses) {
        this.cartItemses = cartItemses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="potentialOrders")
    public Set<Orders> getOrderses() {
        return this.orderses;
    }
    
    public void setOrderses(Set<Orders> orderses) {
        this.orderses = orderses;
    }




}


